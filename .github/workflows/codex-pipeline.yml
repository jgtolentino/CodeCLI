name: Codex Pipeline CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to run tests against'
        required: true
        default: 'test'

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          
      - name: Install dependencies
        run: |
          cd mysite
          npm ci
      
      - name: Check code format
        run: |
          cd mysite
          npx prettier --check "**/*.js" "**/*.json"
  
  test:
    needs: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Copy example env file
        run: cp .env.example .env
      
      - name: Set OpenAI API key for testing
        run: echo "OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}" >> .env
      
      - name: Build & run Codex pipeline
        run: docker-compose up --build --exit-code-from codex
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      
      - name: Check generated output files
        run: |
          if [ ! -f "mysite/out/index.html" ]; then
            echo "Error: Output files not generated correctly"
            exit 1
          fi
          echo "Site generated successfully!"
  
  build:
    needs: test
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/codex:latest
            ghcr.io/${{ github.repository_owner }}/codex:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max