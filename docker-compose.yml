version: '3.8'

services:
  mcp:
    image: node:20-slim
    container_name: mcp_server
    working_dir: /app
    volumes:
      - .:/app
    ports:
      - "3000:3000"
    command: >
      bash -c "cd /app && 
               npm install express cors body-parser --no-save && 
               node -e \"
               const express = require('express');
               const cors = require('cors');
               const bodyParser = require('body-parser');
               const fs = require('fs');
               const path = require('path');
               
               const app = express();
               app.use(cors());
               app.use(bodyParser.json({limit: '50mb'}));
               
               app.post('/context', (req, res) => {
                 console.log('Received context request');
                 const fileList = [];
                 
                 function scanDir(dir) {
                   const items = fs.readdirSync(dir);
                   for (const item of items) {
                     const fullPath = path.join(dir, item);
                     const stats = fs.statSync(fullPath);
                     if (stats.isDirectory() && !item.startsWith('.') && item !== 'node_modules') {
                       scanDir(fullPath);
                     } else if (stats.isFile() && !item.startsWith('.')) {
                       fileList.push({
                         path: fullPath,
                         content: fs.readFileSync(fullPath, 'utf8')
                       });
                     }
                   }
                 }
                 
                 try {
                   scanDir('/app/mysite');
                   res.json({ files: fileList });
                 } catch (error) {
                   console.error('Error processing request:', error);
                   res.status(500).json({ error: error.message });
                 }
               });
               
               app.listen(3000, () => {
                 console.log('MCP Server running on port 3000');
               });
               \""
    networks:
      - codex_network

  codex:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: codex_app
    depends_on:
      - mcp
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - MCP_SERVER=http://mcp:3000
    ports:
      - "8080:8080"
    volumes:
      - ./mysite/compress-and-run.sh:/app/compress-and-run.sh
    command: >
      bash -c "chmod +x /app/compress-and-run.sh && 
               ./compress-and-run.sh && 
               node server.js"
    networks:
      - codex_network

networks:
  codex_network:
    driver: bridge